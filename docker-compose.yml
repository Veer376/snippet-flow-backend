services:
  fastapi:
    container_name: fastapi
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app # mount the current directory to /app in the container so that changes in the host are reflected in the container and we don't have to rebuild the image
    environment:
      - WATCHFILES_FORCE_POLLING = 1
      - DATABASE_URL = postgresql://username:password@postgres:5432/snippet-flow-db # directly send the url to the container
      - EMBEDDING_DIMS = 1024
      - BOOTSTRAP_SERVERS = kafka:9092
    depends_on:
      - postgres
      - kafka
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: snippet-flow-db
    ports:
      - "5432:5432"
    command: 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      # KAFKA_ADVERTISED_LISTENERS is a comma-separated list of listeners
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  consumer:
    build:
      context: ./kafka_app/consumer
    depends_on:
      - kafka
    restart: always
    volumes:
      - ./kafka_app/consumer:/app
    command: ["python", "consumer.py"]
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Disable security for local development
    ports:
      - "9200:9200" 
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: always
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601" 
    restart: always
    

volumes:
  postgres_data:
  esdata: # this is the volume for elasticsearch, 
    driver: local # and this is the driver for the volume, this is not necessary but it is good to have
